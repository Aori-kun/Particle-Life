stages:
  - sync
  - build
  - deploy

sync_repo:
  stage: sync
  image: alpine:latest
  before_script:
    - apk add --no-cache git
  script:
    - git config --global user.email "$GIT_EMAIL"
    - git config --global user.name "$GIT_NAME"
    - git clone --mirror "$GITHUB_REPO_URL" repo-mirror
    - cd repo-mirror
    - git remote set-url --push origin "https://oauth2:${GITLAB_PAT}@gitlab.com/${CI_PROJECT_PATH}.git"
    - git push --mirror

build_app:
  stage: build
  image: debian:latest
  before_script:
    - apt-get update && apt-get install -y rsync openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_KEY_VPS" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H "$SERVER_IP" >> ~/.ssh/known_hosts
  script:
    - ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker build . --tag caddy:latest"
  only:
    - V2

deploy_app:
  stage: deploy
  image: debian:latest
  before_script:
    - apt-get update && apt-get install -y rsync openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_KEY_VPS" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H "$SERVER_IP" >> ~/.ssh/known_hosts
  script:
    - ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker-compose up -d"
  only:
    - V2
